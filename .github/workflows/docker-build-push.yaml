name: Docker Build and Push to GHCR

on:
  push:
    branches:
      - main
  # Optional: Allows for manual triggering of the workflow
  workflow_dispatch:

# Permissions for GHCR access
permissions:
  contents: read
  packages: write

env:
  # Replace 'my-next-app' with your actual application name/repository name
  IMAGE_NAME: nextjs-local
  REGISTRY: ghcr.io

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Lowercase the repository owner name
        # GHCR expects the owner name to be lowercase in the image path
        run: echo "OWNER=$(echo $GITHUB_REPOSITORY_OWNER | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          # GITHUB_TOKEN has 'packages:write' permission due to the 'permissions' block
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Define Image Tags
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.OWNER }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,prefix=sha-,format=long,enable=true
            type=raw,value=latest,enable=true
            type=schedule,pattern=nightly
            type=ref,event=branch
            type=semver,pattern={{version}}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # Use a multi-stage build cache for faster subsequent builds
          cache-from: type=gha
          cache-to: type=gha,mode=max